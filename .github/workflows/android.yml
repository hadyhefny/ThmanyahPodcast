name: Android CI

# Trigger the workflow on pull requests to main and develop branches
on:
  push:
    branches:
      - development
      - main
  pull_request:
    branches:
      - development
      - main
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: true
        default: "Manual Android Build"
        description: "Release Notes"

jobs:
  check-label:
    runs-on: ubuntu-latest
    steps:
     - name: Fail Workflow if label is not 'build'
       if: ${{ github.event.label.name != 'build' }}
       run: |
         echo "Label is not 'build'. Exiting..."
         exit 1
  build:
    runs-on: ubuntu-latest
    needs: check-label
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK (Java 11 or 17 depending on your Android project setup)
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'  # You can also use 'adopt' or 'temurin'
          java-version: '17'    # Or '17' if your project uses Java 17

      # Step 3: Cache Gradle dependencies to speed up builds
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Step 4: Set up the Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Step 5: Build the Android project
      - name: Build with Gradle
        run: ./gradlew build
